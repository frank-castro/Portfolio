// hack to render svgs properly in IE for img tags
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
	img[src*=".svg"] {
		width: 100%; 
	}
}

html, body {
	overflow-x: hidden;
	height: 100%;
}

html {
	font-size: 100%;
} // this works with modular-scale font size which is define below

$default-text-shadow-color: rgba(#000000, 0.8);
$default-text-shadow-blur: 3px;
$default-text-shadow-v-offset: 2px;

$cartbttnshadow: rgba(black, 0.5) 0px 2px 3px;

// COLORS

$color1: white;
$color2: steelblue;
$color3: pink;

$gray1: lightgray;
$gray2: gray;
$gray3: dimgray;

$links: gold;


// TYPEFACE

// White text on a black background has a higher contrast to the opposite, the letterforms need to be wider apart, lighter in weight and have more space between the lines. Increase the leading, tracking and decrease your font-weight

@include font-face("SourceSansReg", font-files("SourceSansPro-Regular.otf"));
@include font-face("SourceSansLight", font-files("SourceSansPro-Light.otf"));
@include font-face("SourceSansBold", font-files("SourceSansPro-Bold.otf"));

$primary-font: 'SourceSansReg';
$primary-fontlight: 'SourceSansLight';
$primary-fontbold: 'SourceSansBold';

// $sans: 'molengo', sans-serif;
$sans: 'freight-sans-pro', sans-serif;
// $sans: 'freight-neo-pro', sans-serif;
$serif: 'freight-text-pro', sans-serif;

// Typographic scale using golden ratio 1:1.618, modular-scale .
// $ms-base: 1rem;
$ms-base: 1rem * 0.92;
// 1rem = 16px by default. To relate values so you can write 1.4rem = 14px, the default font size on the body has to be set like this; body { font-size:62.5%; }.
$ms-ratio: 1.618;

$button: ms(0); //recommended medium weight, all caps
$link: uppercase;

$touch-character: " â˜› " !default;

$susy: (
	columns: 12,
	gutters: .3,
	math: fluid,
	output: float,
	gutter-position: inside,
	container: auto,
	container-position: center,
	debug: (
		image: hide,
		color: rgba(#66f, .25),
		output: background,
		toggle: top right,	
	)
);

$xsmall: 320px;
$small: 760px;
$medium: 970px;
$large: 1200px;
$xlarge: 1919px;

a:hover {
		color: orange;
}

@mixin bg-properties {
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	background-position: center center;
	@include single-transition(all, 1s, ease-out);
}
// check where you were using these properties before you delete the commented lines

nav {
	visibility: hidden;
	position: fixed;
	z-index: 998;
	@include single-transition(all, 0.2s, ease-in);
	opacity: 0;

// -------------------------- XSMALL --------------------------

	@include susy-breakpoint($xsmall) {
		@include single-transition(all, 0.3s, ease-out);
		width: 87vw;
		top: 13vh;
		// left: 50%;
		// @include transform (translate(-50%, -50%));
		// @include transform (translateX(-50%));

		&.navOpen {
			visibility: visible;
			opacity: 1;
			@include transition-delay(0.4s);
			@include transition-duration(0.2s);
			@include transition-timing-function(ease-out);
		}

		ul {
			list-style-type: none;
			margin: 0;
    		padding: 0;

			li {
				display: block; // makes the whole link area clickable (not just the text)
				// float: left;
				padding: 0px 0px ms(0) ms(1);
				text-align: left;
				line-height: 5vh;

				a {
					text-decoration: none;
					// text-transform: uppercase;
					color: $links;
					font-size: 4vh;
				}
			}

			.active {

				a {
					font-family: $sans;
					color: $links;
					opacity: 0.4;
					cursor: none;
				}
			}
		}
	}

// -------------------------- SMALL --------------------------

	@include susy-breakpoint($small) {
		@include single-transition(all, 0.5s, ease-out);
		top: ms(4);
	}

// -------------------------- MEDIUM --------------------------

	@include susy-breakpoint($medium) {
		@include single-transition(all, 0.5s, ease-out);
	}

// -------------------------- LARGE --------------------------

	@include susy-breakpoint($large) {
		@include single-transition(all, 0s, ease-out);

		ul {

			li {
				padding: 0px 0px 3vh 0px;
				// text-align: center;
				line-height: 4vh;

				a {
					font-size: 4vh;
				}
			}
		}
	}

// -------------------------- XLARGE --------------------------

	@include susy-breakpoint($xlarge) {
		@include single-transition(all, 0s, ease-out);
		width: 50%;
		top: ms(5);
		// @include transform (translate(-50%, -50%));

		ul {

			li {
				padding: 0px 0px ms(1) ms(2);
				// text-align: center;
				line-height: 5vh;

				a {
					font-size: 4vh;
				}
			}
		}
	}
}

// keep this body tag down here so you can grab the variables above
body {
	font-family: $sans, $primary-font;
// @include background(linear-gradient(bottom right, rgba(pink, 0.5) 32%, rgba($bg02, 0.5) 44%, rgba($bg01, 0.5) 64%), image-url('bg-test2.png') repeat-y 100% 0);
	// @include background(linear-gradient(bottom right, rgba($bg03, 0.5) 32%, rgba($bg02, 0.5) 44%, rgba($bg01, 0.5) 64%));
	margin: 0px;
	padding: 0px;

	@include susy-breakpoint($xsmall) {
		@include single-transition(all, 1s, ease-out);
			h1 {
				font-size: ms(3); //preferably use the font light weight type
				font-weight: 300;
			}

			h2 {
				font-size: ms(1);
				font-weight: 400;
			}

			h3 {
				font-size: ms(1);
			}

			h4 {
				font-size: ms(0);
			} //recommended medium weight

			p {
				font-size: ms(0);
				line-height: ms(1);
			} // this is the default size
	}

	@include susy-breakpoint($small) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($medium) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($large) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($xlarge) {
		@include single-transition(all, 1s, ease-out);

			h2 {
				font-size: ms(2);
				font-weight: 300;
			}
	}


}

#{headings(1,4)} {
	color: $gray2;
}


// breakpoints structure

// sample {
// 	font-family: sans-serif;

// 	@include susy-breakpoint($xsmall) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($small) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($medium) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($large) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($xlarge) {
// 		@include single-transition(all, 1s, ease-out);
// 	}
// }