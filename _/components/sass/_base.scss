// hack to render svgs properly in IE for img tags
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
	img[src*=".svg"] {
		width: 100%; 
	}
}

html, body {
	overflow-x: hidden;
}

html {
	font-size: 100%;
} // this works with modular-scale font size which is define below

$default-text-shadow-color: rgba(#000000, 0.8);
$default-text-shadow-blur: 3px;
$default-text-shadow-v-offset: 2px;

$cartbttnshadow: rgba(black, 0.5) 0px 2px 3px;

// COLORS

$color1: white;
$color2: steelblue;
$color3: pink;

$gray1: #B3B3B3;
$gray2: gray;
$gray3: dimgray;

$text: #191919;
$hover: black;


// TYPEFACE

// White text on a black background has a higher contrast to the opposite, the letterforms need to be wider apart, lighter in weight and have more space between the lines. Increase the leading, tracking and decrease your font-weight

@include font-face("SourceSansReg", font-files("SourceSansPro-Regular.otf"));
@include font-face("SourceSansLight", font-files("SourceSansPro-Light.otf"));
@include font-face("SourceSansBold", font-files("SourceSansPro-Bold.otf"));

$primary-font: 'SourceSansReg';
$primary-fontlight: 'SourceSansLight';
$primary-fontbold: 'SourceSansBold';

$futura: 'futura-pt', sans-serif;
// using font-weights 300, 400 (normal, italic), 700.

// $ms-base: 1rem;
$ms-base: 1rem * 0.88;
// 1rem = 16px by default. To relate values so you can write 1.4rem = 14px, the default font size on the body has to be set like this; body { font-size:62.5%; }.

// Typographic scale - golden ratio 1:1.618, modular-scale.
$ms-ratio: 1.618;
// $ms-ratio: 1.33; //perfect four


$button: ms(0); //recommended medium weight, all caps
$link: uppercase;

$touch-character: " â˜› " !default;

$susy: (
	columns: 12,
	gutters: .3,
	math: fluid,
	output: float,
	gutter-position: inside,
	container: auto,
	container-position: center,
	debug: (
		image: hide,
		color: rgba(#66f, .25),
		output: background,
		toggle: top right,	
	)
);

// Breakpoints values
$xsmall: 320px; 

$small: 760px; 
$smlMax: 860px;

$medium: 980px; 
$medMax: 1080px;

$large: 1240px; 
$largeMax: 1200px; // this is to maintain the content in this breakpoint within this var width value

$xlarge: 1900px; 
$xlargeMax: 1800px;

a {
	color: $text;
	text-decoration: none;
}

a:hover {
	color: $hover;
	opacity: 1;
}

p {
	font-size: ms(0);
	line-height: ms(1);
	color: $text;
} // this is the default size

@mixin bg-properties {
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	@include single-transition(all, 1s, ease-out);

	@include susy-breakpoint($xsmall) {
		background-position: center center;
	}

	@include susy-breakpoint($large) {
		background-position: center center;
	}
}

// keep this body tag down here so you can reference the variables above
body {
	font-family: $futura, $primary-font;
// @include background(linear-gradient(bottom right, rgba(pink, 0.5) 32%, rgba($bg02, 0.5) 44%, rgba($bg01, 0.5) 64%), image-url('bg-test2.png') repeat-y 100% 0);
	// @include background(linear-gradient(bottom right, rgba($bg03, 0.5) 32%, rgba($bg02, 0.5) 44%, rgba($bg01, 0.5) 64%));
	margin: 0px;
	padding: 0px;

	@include susy-breakpoint($xsmall) {
		@include single-transition(all, 1s, ease-out);
			h1 {
				font-size: ms(3); //preferably use the font light weight type
				font-weight: 300;
			}

			h2 {
				font-size: ms(2);
				font-weight: 400;
			}

			h3 {
				font-size: ms(1);
			}

			h4 {
				font-size: ms(0);
				text-transform: uppercase;
			} //recommended medium weight
	}

	@include susy-breakpoint($small) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($medium) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($large) {
		@include single-transition(all, 1s, ease-out);
	}

	@include susy-breakpoint($xlarge) {
		@include single-transition(all, 1s, ease-out);
	}
}

#{headings(1,4)} {
	color: black;
}

// breakpoint matrix

// sample {
// 	font-family: sans-serif;

// 	@include susy-breakpoint($xsmall) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($small) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($medium) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($large) {
// 		@include single-transition(all, 1s, ease-out);
// 	}

// 	@include susy-breakpoint($xlarge) {
// 		@include single-transition(all, 1s, ease-out);
// 	}
// }